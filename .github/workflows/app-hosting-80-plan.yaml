name: App Hosting 80 Action PR
on:
  pull_request:
    branches:
    - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4
    - name: Get OIDC Token
      id: get-id-token
      uses: actions/github-script@v7
      with:
        script: |
          const token = await core.getIDToken();
          core.setOutput("id_token", token);
          core.setOutput("id_token_url", process.env.ACTIONS_ID_TOKEN_REQUEST_URL);

    - name: Fetch and Decode GitHub OIDC Token
      shell: bash
      run: |
        echo "🔐 Requesting OIDC token from GitHub..."
        TOKEN=$(curl -s -H "Authorization: Bearer ${{ steps.get-id-token.outputs.id_token }}" "${{ steps.get-id-token.outputs.id_token_url }}")

        echo "📦 Raw JWT Token:"
        echo "$TOKEN" | jq

        echo "🔍 Decoded Token Payload:"
        PAYLOAD=$(echo "$TOKEN" | jq -r '.value' | cut -d '.' -f2 | base64 -d 2>/dev/null || echo "Decode error")
        echo "$PAYLOAD" | jq

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     role-to-assume: "arn:aws:iam::412432595210:role/AWSFiddling-actions-read-only-role"
    #     aws-region: "ap-south-1"
    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v3
    #   with:
    #     terraform_version: 1.12.0
    # - name: Initialize Terraform
    #   run: terraform init
    # - name: Check format
    #   run: terraform fmt -check -recursive
    # - name: Validate Terraform
    #   run: terraform validate
    # - name: Run Plan
    #   run: terraform plan